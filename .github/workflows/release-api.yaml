name: Create Release(s)
# SECRETS NEEDED:
# DOCKER_USERNAME - Container Registry Username (github or dockerhub)
# DOCKER_ACCESS_TOKEN - Container registry Personal access token with push priveledges
# CM_API_KEY - ChartMuseum API Key with permission to push
# CM_REPO_URL - ChartMusuem REPO URL in the format: 'https://h.cfcr.io/bsord/charts'

on:
  push:
    branches:
      - 'main'

jobs:
  release:
    name: 'Release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: 'actions/checkout@v2'
        with:
          ref: ${{ github.ref }}

      - name: Update version in version files
        id: update-version
        run: |
          # Bump version
          npm version --no-git-tag-version patch
          # Get new bumped version
          PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
          # Output new version for other steps
          echo "::set-output name=version::$PACKAGE_VERSION"

      - name: Run openfaas-cli build for node16 and shrinkwrap
        uses: docker://openfaas/faas-cli:latest-root
        with:
          args: build --shrinkwrap --image ${{ github.event.repository}} --handler=. --name ${GITHUB_REPOSITORY#*/} --lang=node16

      - name: Commit changes
        uses: EndBug/add-and-commit@v7.2.1
        with:
          message: 'chore(version): Bump to: ${{ steps.update-version.outputs.version }}'
          tag: '${{ steps.get-version.outputs.version }}'
          push: 'origin ${{ github.event.repository.default_branch }} --force'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push the OpenFaaS function
        uses: docker/build-push-action@v2
        with:
          context: ./build/${GITHUB_REPOSITORY#*/}/
          file: ./build/${GITHUB_REPOSITORY#*/}/Dockerfile
          push: true
          tags: 'fairbanksio/f5-get-posts:${{ steps.update-version.outputs.version }}'

